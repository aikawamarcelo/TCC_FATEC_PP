/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package View;

import Control.Conexao;
import Control.ConsultaDAO;
import Control.PacienteDAO;
import Control.PsicologoDAO;
import Model.Consulta;
import Model.Paciente;
import Model.Psicologo;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;


/**
 *
 * @author MARCELO
 */
public class AgendarConsulta extends javax.swing.JFrame {

    /**
     * Creates new form AgendarConsulta
     */
    public AgendarConsulta() {
        initComponents();
        
         ImageIcon icon = new ImageIcon(getClass().getResource("/Imagens/Emblema_Psicologia.png"));
        setIconImage(icon.getImage());
        
          DefaultTableModel modelo = (DefaultTableModel) TABAgendamento.getModel();
        modelo.setNumRows(0);
        readJTable();
      
         DefaultTableModel modelo1 = (DefaultTableModel) TABPsicologos.getModel();
        modelo1.setNumRows(0);
        pesquisarPsicologo();
        
        DefaultTableModel modelo2 = (DefaultTableModel) TABPacientes.getModel();
        modelo2.setNumRows(0);
        pesquisarPaciente();
        BAgendar.setEnabled(true);
        BAlterar.setEnabled(false);
        BExcluir.setEnabled(false);
       TBCausas.setVisible(false);
       TBSintomas.setVisible(false);
       TBObservacoes.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        TABAgendamento = new javax.swing.JTable();
        BAgendar = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        BAlterar = new javax.swing.JButton();
        BExcluir = new javax.swing.JButton();
        TBBuscar = new javax.swing.JTextField();
        TBNomePsi = new javax.swing.JTextField();
        TBNomePa = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        TBCausas = new javax.swing.JTextField();
        TBSintomas = new javax.swing.JTextField();
        TBObservacoes = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        TBData = new javax.swing.JFormattedTextField();
        TBHora = new javax.swing.JFormattedTextField();
        TBNumeroPsi = new javax.swing.JFormattedTextField();
        TBNumeroPa = new javax.swing.JFormattedTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        TBValor = new javax.swing.JFormattedTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        TABPsicologos = new javax.swing.JTable();
        jScrollPane3 = new javax.swing.JScrollPane();
        TABPacientes = new javax.swing.JTable();
        BEnviar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Agendamento de Consultas");
        setResizable(false);
        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                formMouseClicked(evt);
            }
        });

        TABAgendamento.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "NºConsulta", "Psicologo", "Nº Psicólogo", "Paciente", "Nº Paciente", "Data", "Hora", "Valor"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                true, false, false, false, true, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        TABAgendamento.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TABAgendamentoMouseClicked(evt);
            }
        });
        TABAgendamento.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                TABAgendamentoKeyReleased(evt);
            }
        });
        jScrollPane1.setViewportView(TABAgendamento);

        BAgendar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/Cadastrar.png"))); // NOI18N
        BAgendar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                BAgendarMouseClicked(evt);
            }
        });
        BAgendar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BAgendarActionPerformed(evt);
            }
        });

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/Pesquisar2.png"))); // NOI18N
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        BAlterar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/Alterar.png"))); // NOI18N
        BAlterar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                BAlterarMouseClicked(evt);
            }
        });
        BAlterar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BAlterarActionPerformed(evt);
            }
        });

        BExcluir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/Excluir.png"))); // NOI18N
        BExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BExcluirActionPerformed(evt);
            }
        });

        jLabel1.setText("* Nº Psicólogo");

        jLabel2.setText("* Nº Paciente");

        jLabel3.setText("* Psicólogo");

        jLabel4.setText("* Paciente");

        jLabel5.setText("Data da Consulta");

        jLabel6.setText("Horário da Consulta");

        TBCausas.setText("Vazio");
        TBCausas.setEnabled(false);

        TBSintomas.setText("Vazio");
        TBSintomas.setEnabled(false);

        TBObservacoes.setEditable(false);
        TBObservacoes.setText("Vazio");
        TBObservacoes.setEnabled(false);
        TBObservacoes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TBObservacoesActionPerformed(evt);
            }
        });

        jLabel7.setText("Valor");

        try {
            TBData.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        TBData.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TBDataActionPerformed(evt);
            }
        });

        try {
            TBHora.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##:##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        TBHora.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TBHoraActionPerformed(evt);
            }
        });

        try {
            TBNumeroPsi.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("###.###.###-##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        try {
            TBNumeroPa.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("###.###.###-##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        jLabel8.setText("Busca por Paciente");

        jLabel9.setText("Campos Obrigatórios *");

        TBValor.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("0"))));

        TABPsicologos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "CPF", "Psicólogo"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        TABPsicologos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TABPsicologosMouseClicked(evt);
            }
        });
        TABPsicologos.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                TABPsicologosKeyReleased(evt);
            }
        });
        jScrollPane2.setViewportView(TABPsicologos);

        TABPacientes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "CPF", "Paciente"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        TABPacientes.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TABPacientesMouseClicked(evt);
            }
        });
        TABPacientes.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                TABPacientesKeyReleased(evt);
            }
        });
        jScrollPane3.setViewportView(TABPacientes);

        BEnviar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/Enviar.png"))); // NOI18N
        BEnviar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BEnviarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 539, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 539, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(TBNumeroPa, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(TBNomePa, javax.swing.GroupLayout.PREFERRED_SIZE, 282, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(TBNumeroPsi, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1))
                        .addGap(103, 103, 103)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(TBNomePsi, javax.swing.GroupLayout.PREFERRED_SIZE, 287, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGap(41, 41, 41)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel6)
                                    .addComponent(TBHora, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(96, 96, 96)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(TBData, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGap(128, 128, 128)
                                .addComponent(jLabel7)))
                        .addGap(0, 283, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(215, 215, 215)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(TBValor, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(TBBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 239, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8))
                        .addGap(23, 23, 23)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(24, Short.MAX_VALUE))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(TBObservacoes, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(TBCausas, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(TBSintomas, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(BAgendar, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(BAlterar, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(BExcluir, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(BEnviar, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addGap(499, 499, 499)
                            .addComponent(jLabel9))
                        .addGroup(layout.createSequentialGroup()
                            .addContainerGap()
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1212, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addGap(39, 39, 39)
                            .addComponent(jLabel9)
                            .addGap(28, 28, 28)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel6)
                                .addComponent(jLabel5)))
                        .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(49, 49, 49)
                        .addComponent(jLabel1)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(TBNumeroPsi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(TBNomePsi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(TBHora, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(TBData, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(51, 51, 51)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(TBBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel8))
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(36, 36, 36))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(TBValor, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel4)
                                .addComponent(jLabel2))
                            .addComponent(jLabel7))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(TBNumeroPa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(TBNomePa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(36, 36, 36)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(BAgendar, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(BAlterar, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                            .addComponent(BExcluir, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                            .addComponent(BEnviar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addGap(47, 47, 47)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 44, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(TBObservacoes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(TBCausas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(TBSintomas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        setBounds(0, 0, 1284, 816);
    }// </editor-fold>//GEN-END:initComponents

     public void readJTable() {
   
        DefaultTableModel modelo = (DefaultTableModel) TABAgendamento.getModel();
        modelo.setNumRows(0);
       
        ConsultaDAO cdao = new ConsultaDAO();
       
       
        for (Consulta c : cdao.read()) {

            modelo.addRow(new Object[]{
                c.getNumero(),
                c.getNome_psicologo(),
                c.getPsicologo().getCpf(),
                 c.getNome_paciente(),
                c.getPaciente().getCpf(),
                c.getData(),
                c.getHora(),
                c.getValor()
            });

        }
       

  }
     
      public void pesquisarPaciente() {
   
        DefaultTableModel modelo2 = (DefaultTableModel) TABPacientes.getModel();
        modelo2.setNumRows(0);
       
       PacienteDAO pdao = new PacienteDAO();
       
       
        for (Paciente p : pdao.pesquisarPaciente()) {

            modelo2.addRow(new Object[]{
               p.getCpf(),
                p.getNome()
            });

        }
       

  }
     
    public void readJTableForDesc(String desc) {
        
        DefaultTableModel modelo = (DefaultTableModel) TABAgendamento.getModel();
        modelo.setNumRows(0);
        ConsultaDAO cdao = new ConsultaDAO();
        Psicologo psicologo = new Psicologo();
        Paciente paciente = new Paciente();
       for (Consulta c : cdao.readForDesc(desc)) {

            modelo.addRow(new Object[]{
                c.getNumero(),
                c.getNome_psicologo(),
                c.getPsicologo().getCpf(),
                 c.getNome_paciente(),
                c.getPaciente().getCpf(),
                c.getData(),
                c.getHora(),
                c.getValor(),
            });

        }

    }
     public void pesquisarPsicologo() {
   
        DefaultTableModel modelo = (DefaultTableModel) TABPsicologos.getModel();
        modelo.setNumRows(0);
        PsicologoDAO pdao = new PsicologoDAO();

        for (Psicologo p : pdao.pesquisarPsicologo()){

            modelo.addRow(new Object[]{
                p.getCpf(),
                p.getNome()
                   
            });

        }

    }
    private void BAgendarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BAgendarActionPerformed
    
       if(TBValor.getText().isEmpty()){
            
           TBValor.setText("0");
         
         
         }
        
       
          if(TBNomePsi.getText().isEmpty()||TBNomePa.getText().isEmpty()||TBNumeroPsi.getText().isEmpty()||TBNumeroPa.getText().isEmpty()){
              
              JOptionPane.showMessageDialog(null,"Preencha todos os campos obrigatórios * ");
              
          }    
          else{
              
          PsicologoDAO pdao = new PsicologoDAO();
        Psicologo psicologo = new Psicologo();
        Consulta c = new Consulta();
        ConsultaDAO cdao= new ConsultaDAO();
        Paciente paciente = new Paciente();
              
        c.setNome_paciente(TBNomePa.getText());
        c.setNome_psicologo(TBNomePsi.getText());
         paciente.setCpf((TBNumeroPa.getText()));
        c.setPaciente(paciente);
        paciente.setNome(TBNomePa.getText());
        psicologo.setCpf((TBNumeroPsi.getText()));
        c.setPsicologo(psicologo);
        psicologo.setNome(TBNomePsi.getText());
        c.setCausas(TBCausas.getText());
        c.setSintomas(TBSintomas.getText());
        c.setObservacoes(TBObservacoes.getText());
        c.setValor(Double.parseDouble(TBValor.getText()));
        c.setData(TBData.getText());
         c.setHora(TBHora.getText());
        cdao.createConsulta(c);
        TBNomePa.setText("");
        TBNomePsi.setText("");
        TBNumeroPa.setText("");
        TBNumeroPsi.setText("");
        TBData.setText("");
        TBHora.setText("");
        TBValor.setText("");
         readJTable();
          }
        
    }//GEN-LAST:event_BAgendarActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
      readJTableForDesc(TBBuscar.getText());
    }//GEN-LAST:event_jButton2ActionPerformed

    private void BAlterarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BAlterarActionPerformed
        if(TBValor.getText().isEmpty()){
            
           TBValor.setText("0");
         
         
         }                            
        if (TABAgendamento.getSelectedRow() != - 1) {
             int confirma = JOptionPane.showConfirmDialog(null,"Confirma a alteração desta Consulta? ","Atenção",JOptionPane.YES_NO_OPTION);
        if (confirma== JOptionPane.YES_OPTION){
            if(TBValor.getText().isEmpty()||TBNomePsi.getText().isEmpty()||TBNomePa.getText().isEmpty()||TBNumeroPsi.getText().isEmpty()||TBNumeroPa.getText().isEmpty()||TBValor.getText().isEmpty()){
              
              JOptionPane.showMessageDialog(null,"Preencha todos os campos obrigatórios * ");
              
          }  
       else{
          PacienteDAO pacientedao = new PacienteDAO();
          PsicologoDAO psicologodao = new PsicologoDAO();
         Consulta c = new Consulta();
         ConsultaDAO cdao = new ConsultaDAO();
         Paciente paciente = new Paciente();
         Psicologo psicologo = new Psicologo();
          paciente.setCpf((TBNumeroPa.getText()));
        c.setPaciente(paciente);
        c.setNome_paciente(TBNomePa.getText());
        c.setNome_psicologo(TBNomePsi.getText());
        psicologo.setCpf((TBNumeroPsi.getText()));
        c.setPsicologo(psicologo);
        c.setValor(Double.parseDouble(TBValor.getText()));
        c.setData(TBData.getText());
         c.setHora(TBHora.getText());
          c.setCausas(TBCausas.getText());
          c.setSintomas(TBSintomas.getText());
          c.setObservacoes(TBObservacoes.getText());
         c.setNumero((int)TABAgendamento.getValueAt(TABAgendamento.getSelectedRow(), 0));
        cdao.update(c);
        TBNomePa.setText("");
        TBNomePsi.setText("");
        TBNumeroPa.setText("");
        TBNumeroPsi.setText("");
        TBData.setText("");
        TBHora.setText("");
        TBValor.setText("");
        readJTable();
            
         }
            
                   
        }
        else{
              }
        }
         else {
            JOptionPane.showMessageDialog(null, "Selecione uma consulta para alterar");
        
        }
           
    }//GEN-LAST:event_BAlterarActionPerformed

    private void TABAgendamentoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TABAgendamentoMouseClicked
        
        if(TABAgendamento.getSelectedRow() !=-1){
           
            TBNomePsi.setText(TABAgendamento.getValueAt(TABAgendamento.getSelectedRow(),1).toString());
            TBNumeroPsi.setText(TABAgendamento.getValueAt(TABAgendamento.getSelectedRow(),2).toString());
            TBNomePa.setText(TABAgendamento.getValueAt(TABAgendamento.getSelectedRow(),3).toString()); 
            TBNumeroPa.setText(TABAgendamento.getValueAt(TABAgendamento.getSelectedRow(),4).toString());
            TBData.setText(TABAgendamento.getValueAt(TABAgendamento.getSelectedRow(),5).toString());
            TBHora.setText(TABAgendamento.getValueAt(TABAgendamento.getSelectedRow(),6).toString());
            TBValor.setText(TABAgendamento.getValueAt(TABAgendamento.getSelectedRow(),7).toString());
             BAgendar.setEnabled(false);
             BAlterar.setEnabled(true);
             BExcluir.setEnabled(true);
          
    }
        
    }//GEN-LAST:event_TABAgendamentoMouseClicked

    private void TABAgendamentoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TABAgendamentoKeyReleased
        
        if(TABAgendamento.getSelectedRow() !=-1){
           
            TBNomePsi.setText(TABAgendamento.getValueAt(TABAgendamento.getSelectedRow(),1).toString());
            TBNumeroPsi.setText(TABAgendamento.getValueAt(TABAgendamento.getSelectedRow(),2).toString());
            TBNomePa.setText(TABAgendamento.getValueAt(TABAgendamento.getSelectedRow(),3).toString()); 
            TBNumeroPa.setText(TABAgendamento.getValueAt(TABAgendamento.getSelectedRow(),4).toString());
            TBData.setText(TABAgendamento.getValueAt(TABAgendamento.getSelectedRow(),5).toString());
            TBHora.setText(TABAgendamento.getValueAt(TABAgendamento.getSelectedRow(),6).toString());
            TBValor.setText(TABAgendamento.getValueAt(TABAgendamento.getSelectedRow(),7).toString());
             BAgendar.setEnabled(false);
             BAlterar.setEnabled(true);
             BExcluir.setEnabled(true);
          
    }
        
    }//GEN-LAST:event_TABAgendamentoKeyReleased

    private void BExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BExcluirActionPerformed
       
        
        if (TABAgendamento.getSelectedRow() != -1) {
             int confirma = JOptionPane.showConfirmDialog(null,"Confirma a alteração desta Consulta? ","Atenção",JOptionPane.YES_NO_OPTION);
        if (confirma== JOptionPane.YES_OPTION){
        Consulta c = new Consulta();
       
          ConsultaDAO cdao = new  ConsultaDAO();

            c.setNumero((int) TABAgendamento.getValueAt(TABAgendamento.getSelectedRow(), 0));
           
            cdao.delete(c);
             TBNomePa.setText("");
             TBNomePsi.setText("");
             TBNumeroPa.setText("");
             TBNumeroPsi.setText("");
             TBData.setText("");
             TBHora.setText("");
             TBValor.setText("");
          

            readJTable();

        } 
        else{}
        }
        else {
            JOptionPane.showMessageDialog(null, "Selecione uma consulta para excluir.");
        }
        
    }//GEN-LAST:event_BExcluirActionPerformed

    private void TBHoraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TBHoraActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TBHoraActionPerformed

    private void TABPsicologosKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TABPsicologosKeyReleased
           TBNumeroPsi.setText(TABPsicologos.getValueAt(TABPsicologos.getSelectedRow(),0).toString());
        TBNomePsi.setText(TABPsicologos.getValueAt(TABPsicologos.getSelectedRow(),1).toString());
         
    }//GEN-LAST:event_TABPsicologosKeyReleased

    private void TABPsicologosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TABPsicologosMouseClicked
        TBNumeroPsi.setText(TABPsicologos.getValueAt(TABPsicologos.getSelectedRow(),0).toString());
        TBNomePsi.setText(TABPsicologos.getValueAt(TABPsicologos.getSelectedRow(),1).toString());
    }//GEN-LAST:event_TABPsicologosMouseClicked

    private void TABPacientesKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TABPacientesKeyReleased
        TBNumeroPa.setText(TABPacientes.getValueAt(TABPacientes.getSelectedRow(),0).toString()); 
        TBNomePa.setText(TABPacientes.getValueAt(TABPacientes.getSelectedRow(),1).toString()); 
     
    }//GEN-LAST:event_TABPacientesKeyReleased

    private void TABPacientesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TABPacientesMouseClicked
         TBNumeroPa.setText(TABPacientes.getValueAt(TABPacientes.getSelectedRow(),0).toString()); 
        TBNomePa.setText(TABPacientes.getValueAt(TABPacientes.getSelectedRow(),1).toString()); 
    }//GEN-LAST:event_TABPacientesMouseClicked

    private void formMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseClicked
      
       
    }//GEN-LAST:event_formMouseClicked

    private void BAlterarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BAlterarMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_BAlterarMouseClicked

    private void BAgendarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BAgendarMouseClicked
             TBNomePa.setText("");
             TBNomePsi.setText("");
             TBNumeroPa.setText("");
             TBNumeroPsi.setText("");
             TBData.setText("");
             TBHora.setText("");
             TBValor.setText("");
        
             BAgendar.setEnabled(true);
             BAlterar.setEnabled(false);
             BExcluir.setEnabled(false);
    }//GEN-LAST:event_BAgendarMouseClicked

    private void TBDataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TBDataActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TBDataActionPerformed

    private void BEnviarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BEnviarActionPerformed
        EnviarEmail em = new EnviarEmail();
        em.setVisible(true);
    }//GEN-LAST:event_BEnviarActionPerformed

    private void TBObservacoesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TBObservacoesActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TBObservacoesActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AgendarConsulta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AgendarConsulta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AgendarConsulta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AgendarConsulta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AgendarConsulta().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BAgendar;
    private javax.swing.JButton BAlterar;
    private javax.swing.JButton BEnviar;
    private javax.swing.JButton BExcluir;
    private javax.swing.JTable TABAgendamento;
    private javax.swing.JTable TABPacientes;
    private javax.swing.JTable TABPsicologos;
    private javax.swing.JTextField TBBuscar;
    private javax.swing.JTextField TBCausas;
    private javax.swing.JFormattedTextField TBData;
    private javax.swing.JFormattedTextField TBHora;
    private javax.swing.JTextField TBNomePa;
    private javax.swing.JTextField TBNomePsi;
    private javax.swing.JFormattedTextField TBNumeroPa;
    private javax.swing.JFormattedTextField TBNumeroPsi;
    private javax.swing.JTextField TBObservacoes;
    private javax.swing.JTextField TBSintomas;
    private javax.swing.JFormattedTextField TBValor;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    // End of variables declaration//GEN-END:variables
}
